generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Products {
  id               Int                @id @default(autoincrement())
  name             String             @unique @db.VarChar(255)
  price            Float
  longDesc         String?            @db.VarChar(512)
  shortDesc        String?            @db.VarChar(512)
  slug             String?            @unique @db.VarChar(512)
  createdAt        DateTime           @default(now()) @db.Timestamp(6)
  createdBy        String
  updatedAt        DateTime           @default(now()) @db.Timestamp(6)
  isDeleted        Boolean            @default(false)
  // relations
  Attribute_values Attribute_values[]
  Categories       Categories         @relation(fields: [categoriesName], references: [name])
  categoriesName   String
  ProductMedias    ProductMedias[]
}

model Accounts {
  email     String   @id @db.VarChar(255)
  username  String   @unique @db.VarChar(255)
  password  String   @db.VarChar(512)
  createdAt DateTime @default(now()) @db.Timestamp(6)
  isActive  Boolean  @default(true)
  // relations
  Roles     Roles    @relation(fields: [rolesId], references: [id])
  rolesId   Int      @default(2)
}

model Roles {
  id       Int        @id @default(autoincrement())
  name     String     @db.VarChar(255)
  // relations
  Accounts Accounts[]
}

model Attributes {
  name             String             @id @db.VarChar(255)
  // relations
  Attribute_values Attribute_values[]
}

model Attribute_values {
  Products       Products   @relation(fields: [productsId], references: [id])
  productsId     Int
  Attributes     Attributes @relation(fields: [attributesName], references: [name])
  attributesName String
  value          String     @db.VarChar(255)

  @@id([productsId, attributesName])
}

model Categories {
  name     String     @id @db.VarChar(255)
  slug     String     @db.VarChar(255)
  desc     String?    @db.VarChar(512)
  Products Products[]
}

model Medias {
  url           String          @id @db.VarChar(255)
  alt           String?         @db.VarChar(255)
  name          String          @db.VarChar(255)
  size          Int?
  uploadedAt    DateTime        @default(now()) @db.Timestamp(6)
  // relations
  ProductMedias ProductMedias[]
  Banners       Banners?
}

model ProductMedias {
  index      Int
  // relations
  Products   Products @relation(fields: [productsId], references: [id])
  productsId Int
  Medias     Medias   @relation(fields: [mediasUrl], references: [url])
  mediasUrl  String   @db.VarChar(255)

  @@id([productsId, mediasUrl])
}

model Banners {
  id    Int    @id @default(autoincrement())
  // relations
  Media Medias @relation(fields: [url], references: [url])
  url   String @unique @db.VarChar(255)
}

model Setting {
  id         Int     @id @default(autoincrement())
  address    String? @db.VarChar(255)
  logo       String  @db.VarChar(255)
  siteTitle  String  @db.VarChar(255)
  theme      String? @db.VarChar(255)
  adminEmail String? @db.VarChar(255)
}
